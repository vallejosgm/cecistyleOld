{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\andri\\\\IdeaProjects\\\\cecistyle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\andri\\\\IdeaProjects\\\\cecistyle\\\\src\\\\components\\\\Appointment\\\\LayoutTemplateGetAppointment.jsx\";\nimport React, { Component } from 'react';\nimport injectTapEventPlugin from 'react-tap-event-plugin'; //import axios from 'axios'\n\nimport async from 'async';\nimport moment from 'moment';\nimport AppBar from 'material-ui/AppBar';\nimport Drawer from 'material-ui/Drawer';\nimport Dialog from 'material-ui/Dialog';\nimport Divider from 'material-ui/Divider';\nimport MenuItem from 'material-ui/MenuItem';\nimport Card from 'material-ui/Card';\nimport DatePicker from 'material-ui/DatePicker';\nimport TimePicker from 'material-ui/TimePicker';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport SnackBar from 'material-ui/Snackbar';\nimport { Step, Stepper, StepLabel, StepContent, StepButton } from 'material-ui/stepper';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport logo from \"./../../assets/images/logo.svg\";\ninjectTapEventPlugin(); //const HOST = PRODUCTION ? '/' : 'http://localhost:3000/'\n\nexport default class LayoutTemplateGetAppointment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      navOpen: false,\n      confirmationModalOpen: false,\n      confirmationTextVisible: false,\n      stepIndex: 0,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      validEmail: true,\n      validPhone: true,\n      smallScreen: window.innerWidth < 768,\n      confirmationSnackbarOpen: false\n    };\n    this.handleNavToggle = this.handleNavToggle.bind(this);\n    this.handleNextStep = this.handleNextStep.bind(this);\n    this.handleSetAppointmentDate = this.handleSetAppointmentDate.bind(this);\n    this.handleSetAppointmentSlot = this.handleSetAppointmentSlot.bind(this);\n    this.handleSetAppointmentMeridiem = this.handleSetAppointmentMeridiem.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePhone = this.validatePhone.bind(this);\n    this.checkDisableDate = this.checkDisableDate.bind(this);\n    this.renderAppointmentTimes = this.renderAppointmentTimes.bind(this);\n    this.renderConfirmationString = this.renderConfirmationString.bind(this);\n    this.renderAppointmentConfirmation = this.renderAppointmentConfirmation.bind(this);\n    this.resize = this.resize.bind(this);\n  }\n\n  handleNavToggle() {\n    return this.setState({\n      navOpen: !this.state.navOpen\n    });\n  }\n\n  handleNextStep() {\n    const stepIndex = this.state.stepIndex;\n    return stepIndex < 3 ? this.setState({\n      stepIndex: stepIndex + 1\n    }) : null;\n  }\n\n  handleSetAppointmentDate(date) {\n    this.handleNextStep();\n    this.setState({\n      appointmentDate: date,\n      confirmationTextVisible: true\n    });\n  }\n\n  handleSetAppointmentSlot(slot) {\n    this.handleNextStep();\n    this.setState({\n      appointmentSlot: slot\n    });\n  }\n\n  handleSetAppointmentMeridiem(meridiem) {\n    this.setState({\n      appointmentMeridiem: meridiem\n    });\n  }\n\n  handleFetch(response) {\n    const configs = response.configs,\n          appointments = response.appointments;\n    const initSchedule = {};\n    const today = moment().startOf('day');\n    initSchedule[today.format('YYYY-DD-MM')] = true;\n    const schedule = !appointments.length ? initSchedule : appointments.reduce((currentSchedule, appointment) => {\n      const date = appointment.date,\n            slot = appointment.slot;\n      const dateString = moment(date, 'YYYY-DD-MM').format('YYYY-DD-MM');\n      !currentSchedule[date] ? currentSchedule[dateString] = Array(8).fill(false) : null;\n      Array.isArray(currentSchedule[dateString]) ? currentSchedule[dateString][slot] = true : null;\n      return currentSchedule;\n    }, initSchedule); //Imperative x 100, but no regrets\n\n    for (let day in schedule) {\n      let slots = schedule[day];\n      slots.length ? slots.every(slot => slot === true) ? schedule[day] = true : null : null;\n    }\n\n    this.setState({\n      schedule,\n      siteTitle: configs.site_title,\n      aboutPageUrl: configs.about_page_url,\n      contactPageUrl: configs.contact_page_url,\n      homePageUrl: configs.home_page_url,\n      loading: false\n    });\n  }\n\n  handleFetchError(err) {\n    console.log(err);\n    this.setState({\n      confirmationSnackbarMessage: 'Error fetching data',\n      confirmationSnackbarOpen: true\n    });\n  }\n\n  handleSubmit() {\n    const appointment = {\n      date: moment(this.state.appointmentDate).format('YYYY-DD-MM'),\n      slot: this.state.appointmentSlot,\n      name: this.state.firstName + ' ' + this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone\n      /*axios.post(HOST + 'api/appointments', appointment)\r\n      .then(response => this.setState({ confirmationSnackbarMessage: \"Appointment succesfully added!\", confirmationSnackbarOpen: true, processed: true }))\r\n      .catch(err => {\r\n        console.log(err)\r\n        return this.setState({ confirmationSnackbarMessage: \"Appointment failed to save.\", confirmationSnackbarOpen: true })\r\n      })*/\n\n    };\n  }\n\n  validateEmail(email) {\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return regex.test(email) ? this.setState({\n      email: email,\n      validEmail: true\n    }) : this.setState({\n      validEmail: false\n    });\n  }\n\n  validatePhone(phoneNumber) {\n    const regex = /^(1\\s|1|)?((\\(\\d{3}\\))|\\d{3})(\\-|\\s)?(\\d{3})(\\-|\\s)?(\\d{4})$/;\n    return regex.test(phoneNumber) ? this.setState({\n      phone: phoneNumber,\n      validPhone: true\n    }) : this.setState({\n      validPhone: false\n    });\n  }\n\n  checkDisableDate(day) {\n    const dateString = moment(day).format('YYYY-DD-MM');\n    return this.state.schedule[dateString] === true || moment(day).startOf('day').diff(moment().startOf('day')) < 0;\n  }\n\n  renderConfirmationString() {\n    const spanStyle = {\n      color: '#00bcd4'\n    };\n    return this.state.confirmationTextVisible ? React.createElement(\"h2\", {\n      style: {\n        textAlign: this.state.smallScreen ? 'center' : 'left',\n        color: '#bdbdbd',\n        lineHeight: 1.5,\n        padding: '0 10px',\n        fontFamily: 'Roboto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Scheduling a\", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" 1 hour \"), \"appointment \", this.state.appointmentDate && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"on \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, moment(this.state.appointmentDate).format('dddd[,] MMMM Do'))), \" \", Number.isInteger(this.state.appointmentSlot) && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"at \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, moment().hour(9).minute(0).add(this.state.appointmentSlot, 'hours').format('h:mm a'))))) : null;\n  }\n\n  renderAppointmentTimes() {\n    if (!this.state.loading) {\n      const slots = [...Array(8).keys()];\n      return slots.map(slot => {\n        const appointmentDateString = moment(this.state.appointmentDate).format('YYYY-DD-MM');\n        const t1 = moment().hour(9).minute(0).add(slot, 'hours');\n        const t2 = moment().hour(9).minute(0).add(slot + 1, 'hours');\n        const scheduleDisabled = this.state.schedule[appointmentDateString] ? this.state.schedule[moment(this.state.appointmentDate).format('YYYY-DD-MM')][slot] : false;\n        const meridiemDisabled = this.state.appointmentMeridiem ? t1.format('a') === 'am' : t1.format('a') === 'pm';\n        return React.createElement(RadioButton, {\n          label: t1.format('h:mm a') + ' - ' + t2.format('h:mm a'),\n          key: slot,\n          value: slot,\n          style: {\n            marginBottom: 15,\n            display: meridiemDisabled ? 'none' : 'inherit'\n          },\n          disabled: scheduleDisabled || meridiemDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderAppointmentConfirmation() {\n    const spanStyle = {\n      color: '#00bcd4'\n    };\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Name: \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.firstName, \" \", this.state.lastName)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Number: \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.state.phone)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Email: \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.email)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Appointment: \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, moment(this.state.appointmentDate).format('dddd[,] MMMM Do[,] YYYY')), \" at \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, moment().hour(9).minute(0).add(this.state.appointmentSlot, 'hours').format('h:mm a'))));\n  }\n\n  resize() {\n    this.setState({\n      smallScreen: window.innerWidth < 768\n    });\n  }\n\n  componentWillMount() {\n    /*async.series({\r\n      configs(callback) {\r\n        axios.get(HOST + 'api/config').then(res =>\r\n          callback(null, res.data.data)\r\n        )\r\n      },\r\n      appointments(callback) {\r\n        axios.get(HOST + 'api/appointments').then(res => {\r\n          callback(null, res.data.data)\r\n        })\r\n      }\r\n    }, (err,response) => {\r\n      err ? this.handleFetchError(err) : this.handleFetch(response)\r\n    })*/\n    //addEventListener('resize', this.resize)\n  }\n\n  componentWillUnmount() {//removeEventListener('resize', this.resize)\n  }\n\n  render() {\n    const _this$state = this.state,\n          stepIndex = _this$state.stepIndex,\n          loading = _this$state.loading,\n          navOpen = _this$state.navOpen,\n          smallScreen = _this$state.smallScreen,\n          confirmationModalOpen = _this$state.confirmationModalOpen,\n          confirmationSnackbarOpen = _this$state.confirmationSnackbarOpen,\n          data = _objectWithoutProperties(_this$state, [\"stepIndex\", \"loading\", \"navOpen\", \"smallScreen\", \"confirmationModalOpen\", \"confirmationSnackbarOpen\"]);\n\n    const contactFormFilled = data.firstName && data.lastName && data.phone && data.email && data.validPhone && data.validEmail;\n    const modalActions = [React.createElement(FlatButton, {\n      label: \"Cancel\",\n      primary: false,\n      onClick: () => this.setState({\n        confirmationModalOpen: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(FlatButton, {\n      label: \"Confirm\",\n      primary: true,\n      onClick: () => this.handleSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      title: data.siteTitle,\n      onLeftIconButtonTouchTap: () => this.handleNavToggle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Drawer, {\n      docked: false,\n      width: 300,\n      open: navOpen,\n      onRequestChange: navOpen => this.setState({\n        navOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      style: {\n        height: 70,\n        marginTop: 50,\n        marginBottom: 30,\n        marginLeft: '50%',\n        transform: 'translateX(-50%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      style: {\n        textDecoration: 'none'\n      },\n      href: this.state.homePageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"a\", {\n      style: {\n        textDecoration: 'none'\n      },\n      href: this.state.aboutPageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"a\", {\n      style: {\n        textDecoration: 'none'\n      },\n      href: this.state.contactPageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Contact\")), React.createElement(MenuItem, {\n      disabled: true,\n      style: {\n        marginLeft: '50%',\n        transform: 'translate(-50%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"© Copyright \" + moment().format('YYYY'))), React.createElement(\"section\", {\n      style: {\n        maxWidth: !smallScreen ? '80%' : '100%',\n        margin: 'auto',\n        marginTop: !smallScreen ? 20 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.renderConfirmationString(), React.createElement(Card, {\n      style: {\n        padding: '10px 10px 25px 10px',\n        height: smallScreen ? '100vh' : null\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: stepIndex,\n      linear: false,\n      orientation: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Step, {\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: () => this.setState({\n        stepIndex: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Choose an available day for your appointment\"), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      style: {\n        marginTop: 10,\n        marginLeft: 10\n      },\n      value: data.appointmentDate,\n      hintText: \"Select a date\",\n      mode: smallScreen ? 'portrait' : 'landscape',\n      onChange: (n, date) => this.handleSetAppointmentDate(date),\n      shouldDisableDate: day => this.checkDisableDate(day),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))), React.createElement(Step, {\n      disabled: !data.appointmentDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: () => this.setState({\n        stepIndex: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Choose an available time for your appointment\"), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(SelectField, {\n      floatingLabelText: \"AM or PM\",\n      value: data.appointmentMeridiem,\n      onChange: (evt, key, payload) => this.handleSetAppointmentMeridiem(payload),\n      selectionRenderer: value => value ? 'PM' : 'AM',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"AM\"), React.createElement(MenuItem, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"PM\")), React.createElement(RadioButtonGroup, {\n      style: {\n        marginTop: 15,\n        marginLeft: 15\n      },\n      name: \"appointmentTimes\",\n      defaultSelected: data.appointmentSlot,\n      onChange: (evt, val) => this.handleSetAppointmentSlot(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, this.renderAppointmentTimes()))), React.createElement(Step, {\n      disabled: !Number.isInteger(this.state.appointmentSlot),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: () => this.setState({\n        stepIndex: 2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Share your contact information with us and we'll send you a reminder\"), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      style: {\n        display: 'block'\n      },\n      name: \"first_name\",\n      hintText: \"First Name\",\n      floatingLabelText: \"First Name\",\n      onChange: (evt, newValue) => this.setState({\n        firstName: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      style: {\n        display: 'block'\n      },\n      name: \"last_name\",\n      hintText: \"Last Name\",\n      floatingLabelText: \"Last Name\",\n      onChange: (evt, newValue) => this.setState({\n        lastName: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      style: {\n        display: 'block'\n      },\n      name: \"email\",\n      hintText: \"name@mail.com\",\n      floatingLabelText: \"Email\",\n      errorText: data.validEmail ? null : 'Enter a valid email address',\n      onChange: (evt, newValue) => this.validateEmail(newValue),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      style: {\n        display: 'block'\n      },\n      name: \"phone\",\n      hintText: \"(888) 888-8888\",\n      floatingLabelText: \"Phone\",\n      errorText: data.validPhone ? null : 'Enter a valid phone number',\n      onChange: (evt, newValue) => this.validatePhone(newValue),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      style: {\n        display: 'block'\n      },\n      label: contactFormFilled ? 'Schedule' : 'Fill out your information to schedule',\n      labelPosition: \"before\",\n      primary: true,\n      fullWidth: true,\n      onClick: () => this.setState({\n        confirmationModalOpen: !this.state.confirmationModalOpen\n      }),\n      disabled: !contactFormFilled || data.processed,\n      style: {\n        marginTop: 20,\n        maxWidth: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })))))), React.createElement(Dialog, {\n      modal: true,\n      open: confirmationModalOpen,\n      actions: modalActions,\n      title: \"Confirm your appointment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, this.renderAppointmentConfirmation()), React.createElement(SnackBar, {\n      open: confirmationSnackbarOpen || loading,\n      message: loading ? 'Loading... ' : data.confirmationSnackbarMessage || '',\n      autoHideDuration: 10000,\n      onRequestClose: () => this.setState({\n        confirmationSnackbarOpen: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\andri\\IdeaProjects\\cecistyle\\src\\components\\Appointment\\LayoutTemplateGetAppointment.jsx"],"names":["React","Component","injectTapEventPlugin","async","moment","AppBar","Drawer","Dialog","Divider","MenuItem","Card","DatePicker","TimePicker","TextField","SelectField","SnackBar","Step","Stepper","StepLabel","StepContent","StepButton","RadioButton","RadioButtonGroup","RaisedButton","FlatButton","LayoutTemplateGetAppointment","constructor","state","loading","navOpen","confirmationModalOpen","confirmationTextVisible","stepIndex","appointmentDateSelected","appointmentMeridiem","validEmail","validPhone","smallScreen","window","innerWidth","confirmationSnackbarOpen","handleNavToggle","bind","handleNextStep","handleSetAppointmentDate","handleSetAppointmentSlot","handleSetAppointmentMeridiem","handleSubmit","validateEmail","validatePhone","checkDisableDate","renderAppointmentTimes","renderConfirmationString","renderAppointmentConfirmation","resize","setState","date","appointmentDate","slot","appointmentSlot","meridiem","handleFetch","response","configs","appointments","initSchedule","today","startOf","format","schedule","length","reduce","currentSchedule","appointment","dateString","Array","fill","isArray","day","slots","every","siteTitle","site_title","aboutPageUrl","about_page_url","contactPageUrl","contact_page_url","homePageUrl","home_page_url","handleFetchError","err","console","log","confirmationSnackbarMessage","name","firstName","lastName","email","phone","regex","test","phoneNumber","diff","spanStyle","color","textAlign","lineHeight","padding","fontFamily","Number","isInteger","hour","minute","add","keys","map","appointmentDateString","t1","t2","scheduleDisabled","meridiemDisabled","marginBottom","display","componentWillMount","componentWillUnmount","render","data","contactFormFilled","modalActions","logo","height","marginTop","marginLeft","transform","textDecoration","maxWidth","margin","n","evt","key","payload","value","val","newValue","processed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport injectTapEventPlugin from 'react-tap-event-plugin'\r\n//import axios from 'axios'\r\nimport async from 'async'\r\nimport moment from 'moment'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport Drawer from 'material-ui/Drawer'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport Divider from 'material-ui/Divider'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport Card from 'material-ui/Card'\r\nimport DatePicker from 'material-ui/DatePicker'\r\nimport TimePicker from 'material-ui/TimePicker'\r\nimport TextField from 'material-ui/TextField'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport SnackBar from 'material-ui/Snackbar'\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  StepLabel,\r\n  StepContent,\r\n  StepButton\r\n} from 'material-ui/stepper'\r\nimport {\r\n  RadioButton,\r\n  RadioButtonGroup\r\n} from 'material-ui/RadioButton'\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport logo from './../../assets/images/logo.svg'\r\n\r\ninjectTapEventPlugin()\r\n//const HOST = PRODUCTION ? '/' : 'http://localhost:3000/'\r\n\r\nexport default class LayoutTemplateGetAppointment extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      loading: true,\r\n      navOpen: false,\r\n      confirmationModalOpen: false,\r\n      confirmationTextVisible: false,\r\n      stepIndex: 0,\r\n      appointmentDateSelected: false,\r\n      appointmentMeridiem: 0,\r\n      validEmail: true,\r\n      validPhone: true,\r\n      smallScreen: window.innerWidth < 768,\r\n      confirmationSnackbarOpen: false\r\n    }\r\n\r\n    this.handleNavToggle = this.handleNavToggle.bind(this)\r\n    this.handleNextStep = this.handleNextStep.bind(this)\r\n    this.handleSetAppointmentDate = this.handleSetAppointmentDate.bind(this)\r\n    this.handleSetAppointmentSlot = this.handleSetAppointmentSlot.bind(this)\r\n    this.handleSetAppointmentMeridiem = this.handleSetAppointmentMeridiem.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.validateEmail = this.validateEmail.bind(this)\r\n    this.validatePhone = this.validatePhone.bind(this)\r\n    this.checkDisableDate = this.checkDisableDate.bind(this)\r\n    this.renderAppointmentTimes = this.renderAppointmentTimes.bind(this)\r\n    this.renderConfirmationString = this.renderConfirmationString.bind(this)\r\n    this.renderAppointmentConfirmation = this.renderAppointmentConfirmation.bind(this)\r\n    this.resize = this.resize.bind(this)\r\n  }\r\n\r\n  handleNavToggle() {\r\n    return this.setState({ navOpen: !this.state.navOpen })\r\n  }\r\n\r\n  handleNextStep() {\r\n    const { stepIndex } = this.state\r\n    return (stepIndex < 3) ? this.setState({ stepIndex: stepIndex + 1}) : null\r\n  }\r\n\r\n  handleSetAppointmentDate(date) {\r\n    this.handleNextStep()\r\n    this.setState({ appointmentDate: date, confirmationTextVisible: true })\r\n  }\r\n\r\n  handleSetAppointmentSlot(slot) {\r\n    this.handleNextStep()\r\n    this.setState({ appointmentSlot: slot })\r\n  }\r\n\r\n  handleSetAppointmentMeridiem(meridiem) {\r\n    this.setState({ appointmentMeridiem: meridiem})\r\n  }\r\n\r\n  handleFetch(response) {\r\n    const { configs, appointments } = response\r\n    const initSchedule = {}\r\n    const today = moment().startOf('day')\r\n    initSchedule[today.format('YYYY-DD-MM')] = true\r\n    const schedule = !appointments.length ? initSchedule : appointments.reduce((currentSchedule, appointment) => {\r\n      const { date, slot } = appointment\r\n      const dateString = moment(date, 'YYYY-DD-MM').format('YYYY-DD-MM')\r\n      !currentSchedule[date] ? currentSchedule[dateString] = Array(8).fill(false) : null\r\n      Array.isArray(currentSchedule[dateString]) ?\r\n        currentSchedule[dateString][slot] = true : null\r\n      return currentSchedule\r\n    }, initSchedule)\r\n\r\n    //Imperative x 100, but no regrets\r\n    for (let day in schedule) {\r\n      let slots = schedule[day]\r\n      slots.length ? (slots.every(slot => slot === true)) ? schedule[day] = true : null : null\r\n    }\r\n\r\n    this.setState({\r\n      schedule,\r\n      siteTitle: configs.site_title,\r\n      aboutPageUrl: configs.about_page_url,\r\n      contactPageUrl: configs.contact_page_url,\r\n      homePageUrl: configs.home_page_url,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleFetchError(err) {\r\n    console.log(err)\r\n    this.setState({ confirmationSnackbarMessage: 'Error fetching data', confirmationSnackbarOpen: true })\r\n  }\r\n\r\n  handleSubmit() {\r\n    const appointment = {\r\n      date: moment(this.state.appointmentDate).format('YYYY-DD-MM'),\r\n      slot: this.state.appointmentSlot,\r\n      name: this.state.firstName + ' ' + this.state.lastName,\r\n      email: this.state.email,\r\n      phone: this.state.phone\r\n    }\r\n    /*axios.post(HOST + 'api/appointments', appointment)\r\n    .then(response => this.setState({ confirmationSnackbarMessage: \"Appointment succesfully added!\", confirmationSnackbarOpen: true, processed: true }))\r\n    .catch(err => {\r\n      console.log(err)\r\n      return this.setState({ confirmationSnackbarMessage: \"Appointment failed to save.\", confirmationSnackbarOpen: true })\r\n    })*/\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n    return regex.test(email) ? this.setState({ email: email, validEmail: true }) : this.setState({ validEmail: false })\r\n  }\r\n\r\n  validatePhone(phoneNumber) {\r\n    const regex = /^(1\\s|1|)?((\\(\\d{3}\\))|\\d{3})(\\-|\\s)?(\\d{3})(\\-|\\s)?(\\d{4})$/\r\n    return regex.test(phoneNumber) ? this.setState({ phone: phoneNumber, validPhone: true }) : this.setState({ validPhone: false })\r\n  }\r\n\r\n  checkDisableDate(day) {\r\n    const dateString = moment(day).format('YYYY-DD-MM')\r\n    return this.state.schedule[dateString] === true || moment(day).startOf('day').diff(moment().startOf('day')) < 0\r\n  }\r\n\r\n  renderConfirmationString() {\r\n    const spanStyle = {color: '#00bcd4'}\r\n    return this.state.confirmationTextVisible ? <h2 style={{ textAlign: this.state.smallScreen ? 'center' : 'left', color: '#bdbdbd', lineHeight: 1.5, padding: '0 10px', fontFamily: 'Roboto'}}>\r\n      { <span>\r\n        Scheduling a\r\n\r\n          <span style={spanStyle}> 1 hour </span>\r\n\r\n        appointment {this.state.appointmentDate && <span>\r\n          on <span style={spanStyle}>{moment(this.state.appointmentDate).format('dddd[,] MMMM Do')}</span>\r\n      </span>} {Number.isInteger(this.state.appointmentSlot) && <span>at <span style={spanStyle}>{moment().hour(9).minute(0).add(this.state.appointmentSlot, 'hours').format('h:mm a')}</span></span>}\r\n      </span>}\r\n    </h2> : null\r\n  }\r\n\r\n  renderAppointmentTimes() {\r\n    if (!this.state.loading) {\r\n      const slots = [...Array(8).keys()]\r\n      return slots.map(slot => {\r\n        const appointmentDateString = moment(this.state.appointmentDate).format('YYYY-DD-MM')\r\n        const t1 = moment().hour(9).minute(0).add(slot, 'hours')\r\n        const t2 = moment().hour(9).minute(0).add(slot + 1, 'hours')\r\n        const scheduleDisabled = this.state.schedule[appointmentDateString] ? this.state.schedule[moment(this.state.appointmentDate).format('YYYY-DD-MM')][slot] : false\r\n        const meridiemDisabled = this.state.appointmentMeridiem ? t1.format('a') === 'am' : t1.format('a') === 'pm'\r\n        return <RadioButton\r\n          label={t1.format('h:mm a') + ' - ' + t2.format('h:mm a')}\r\n          key={slot}\r\n          value={slot}\r\n          style={{marginBottom: 15, display: meridiemDisabled ? 'none' : 'inherit'}}\r\n          disabled={scheduleDisabled || meridiemDisabled}/>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  renderAppointmentConfirmation() {\r\n    const spanStyle = { color: '#00bcd4' }\r\n    return <section>\r\n      <p>Name: <span style={spanStyle}>{this.state.firstName} {this.state.lastName}</span></p>\r\n      <p>Number: <span style={spanStyle}>{this.state.phone}</span></p>\r\n      <p>Email: <span style={spanStyle}>{this.state.email}</span></p>\r\n      <p>Appointment: <span style={spanStyle}>{moment(this.state.appointmentDate).format('dddd[,] MMMM Do[,] YYYY')}</span> at <span style={spanStyle}>{moment().hour(9).minute(0).add(this.state.appointmentSlot, 'hours').format('h:mm a')}</span></p>\r\n    </section>\r\n  }\r\n\r\n  resize() {\r\n    this.setState({ smallScreen: window.innerWidth < 768 })\r\n  }\r\n\r\n  componentWillMount() {\r\n    /*async.series({\r\n      configs(callback) {\r\n        axios.get(HOST + 'api/config').then(res =>\r\n          callback(null, res.data.data)\r\n        )\r\n      },\r\n      appointments(callback) {\r\n        axios.get(HOST + 'api/appointments').then(res => {\r\n          callback(null, res.data.data)\r\n        })\r\n      }\r\n    }, (err,response) => {\r\n      err ? this.handleFetchError(err) : this.handleFetch(response)\r\n    })*/\r\n    //addEventListener('resize', this.resize)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //removeEventListener('resize', this.resize)\r\n  }\r\n\r\n  render() {\r\n    const { stepIndex, loading, navOpen, smallScreen, confirmationModalOpen, confirmationSnackbarOpen, ...data } = this.state\r\n    const contactFormFilled = data.firstName && data.lastName && data.phone && data.email && data.validPhone && data.validEmail\r\n    const modalActions = [\r\n      <FlatButton\r\n        label=\"Cancel\"\r\n        primary={false}\r\n        onClick={() => this.setState({ confirmationModalOpen : false})} />,\r\n      <FlatButton\r\n        label=\"Confirm\"\r\n        primary={true}\r\n        onClick={() => this.handleSubmit()} />\r\n    ]\r\n    return (\r\n      <div>\r\n        <AppBar\r\n          title={data.siteTitle}\r\n          onLeftIconButtonTouchTap={() => this.handleNavToggle() }/>\r\n        <Drawer\r\n          docked={false}\r\n          width={300}\r\n          open={navOpen}\r\n          onRequestChange={(navOpen) => this.setState({navOpen})} >\r\n          <img src={logo}\r\n               style={{\r\n                 height: 70,\r\n                 marginTop: 50,\r\n                 marginBottom: 30,\r\n                 marginLeft: '50%',\r\n                 transform: 'translateX(-50%)'\r\n               }}/>\r\n          <a style={{textDecoration: 'none'}} href={this.state.homePageUrl}><MenuItem>Home</MenuItem></a>\r\n          <a style={{textDecoration: 'none'}} href={this.state.aboutPageUrl}><MenuItem>About</MenuItem></a>\r\n          <a style={{textDecoration: 'none'}} href={this.state.contactPageUrl}><MenuItem>Contact</MenuItem></a>\r\n\r\n          <MenuItem disabled={true}\r\n                    style={{\r\n                      marginLeft: '50%',\r\n                      transform: 'translate(-50%)'\r\n                    }}>\r\n            {\"© Copyright \" + moment().format('YYYY')}</MenuItem>\r\n        </Drawer>\r\n        <section style={{\r\n            maxWidth: !smallScreen ? '80%' : '100%',\r\n            margin: 'auto',\r\n            marginTop: !smallScreen ? 20 : 0,\r\n          }}>\r\n          {this.renderConfirmationString()}\r\n          <Card style={{\r\n              padding: '10px 10px 25px 10px',\r\n              height: smallScreen ? '100vh' : null\r\n            }}>\r\n            <Stepper\r\n              activeStep={stepIndex}\r\n              linear={false}\r\n              orientation=\"vertical\">\r\n              <Step disabled={loading}>\r\n                <StepButton onClick={() => this.setState({ stepIndex: 0 })}>\r\n                  Choose an available day for your appointment\r\n                </StepButton>\r\n                <StepContent>\r\n                  <DatePicker\r\n                      style={{\r\n                        marginTop: 10,\r\n                        marginLeft: 10\r\n                      }}\r\n                      value={data.appointmentDate}\r\n                      hintText=\"Select a date\"\r\n                      mode={smallScreen ? 'portrait' : 'landscape'}\r\n                      onChange={(n, date) => this.handleSetAppointmentDate(date)}\r\n                      shouldDisableDate={day => this.checkDisableDate(day)}\r\n                       />\r\n                  </StepContent>\r\n              </Step>\r\n              <Step disabled={ !data.appointmentDate }>\r\n                <StepButton onClick={() => this.setState({ stepIndex: 1 })}>\r\n                  Choose an available time for your appointment\r\n                </StepButton>\r\n                <StepContent>\r\n                  <SelectField\r\n                    floatingLabelText=\"AM or PM\"\r\n                    value={data.appointmentMeridiem}\r\n                    onChange={(evt, key, payload) => this.handleSetAppointmentMeridiem(payload)}\r\n                    selectionRenderer={value => value ? 'PM' : 'AM'}>\r\n                    <MenuItem value={0}>AM</MenuItem>\r\n                    <MenuItem value={1}>PM</MenuItem>\r\n                  </SelectField>\r\n                  <RadioButtonGroup\r\n                    style={{ marginTop: 15,\r\n                             marginLeft: 15\r\n                           }}\r\n                    name=\"appointmentTimes\"\r\n                    defaultSelected={data.appointmentSlot}\r\n                    onChange={(evt, val) => this.handleSetAppointmentSlot(val)}>\r\n                    {this.renderAppointmentTimes()}\r\n                  </RadioButtonGroup>\r\n                </StepContent>\r\n              </Step>\r\n              <Step disabled={ !Number.isInteger(this.state.appointmentSlot) }>\r\n                <StepButton onClick={() => this.setState({ stepIndex: 2 })}>\r\n                  Share your contact information with us and we'll send you a reminder\r\n                </StepButton>\r\n                <StepContent>\r\n                  <section>\r\n                    <TextField\r\n                      style={{ display: 'block' }}\r\n                      name=\"first_name\"\r\n                      hintText=\"First Name\"\r\n                      floatingLabelText=\"First Name\"\r\n                      onChange={(evt, newValue) => this.setState({ firstName: newValue })}/>\r\n                    <TextField\r\n                      style={{ display: 'block' }}\r\n                      name=\"last_name\"\r\n                      hintText=\"Last Name\"\r\n                      floatingLabelText=\"Last Name\"\r\n                      onChange={(evt, newValue) => this.setState({ lastName: newValue })}/>\r\n                    <TextField\r\n                      style={{ display: 'block' }}\r\n                      name=\"email\"\r\n                      hintText=\"name@mail.com\"\r\n                      floatingLabelText=\"Email\"\r\n                      errorText={data.validEmail ? null : 'Enter a valid email address'}\r\n                      onChange={(evt, newValue) => this.validateEmail(newValue)}/>\r\n                    <TextField\r\n                      style={{ display: 'block' }}\r\n                      name=\"phone\"\r\n                      hintText=\"(888) 888-8888\"\r\n                      floatingLabelText=\"Phone\"\r\n                      errorText={data.validPhone ? null: 'Enter a valid phone number'}\r\n                      onChange={(evt, newValue) => this.validatePhone(newValue)} />\r\n                    <RaisedButton\r\n                      style={{ display: 'block' }}\r\n                      label={contactFormFilled ? 'Schedule' : 'Fill out your information to schedule'}\r\n                      labelPosition=\"before\"\r\n                      primary={true}\r\n                      fullWidth={true}\r\n                      onClick={() => this.setState({ confirmationModalOpen: !this.state.confirmationModalOpen })}\r\n                      disabled={!contactFormFilled || data.processed }\r\n                      style={{ marginTop: 20, maxWidth: 100}} />\r\n                  </section>\r\n                </StepContent>\r\n              </Step>\r\n            </Stepper>\r\n          </Card>\r\n          <Dialog\r\n            modal={true}\r\n            open={confirmationModalOpen}\r\n            actions={modalActions}\r\n            title=\"Confirm your appointment\">\r\n            {this.renderAppointmentConfirmation()}\r\n          </Dialog>\r\n          <SnackBar\r\n            open={confirmationSnackbarOpen || loading}\r\n            message={loading ? 'Loading... ' : data.confirmationSnackbarMessage || ''}\r\n            autoHideDuration={10000}\r\n            onRequestClose={() => this.setState({ confirmationSnackbarOpen: false })} />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}