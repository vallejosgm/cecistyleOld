{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andri\\\\IdeaProjects\\\\cecistyle\\\\src\\\\js\\\\FormUtil.js\";\nimport React from 'react'; //import 'jspdf-autotable';\n\nexport const SliderBar = ({\n  currentPage,\n  totalPages,\n  primaryColor,\n  heightCurrentBar,\n  heightTotalBar\n}) => {\n  const widthBar = Math.round(1 / totalPages * 100 * 100) / 100;\n  const marginLeft = currentPage * widthBar;\n  return React.createElement(\"div\", {\n    className: \"slider-bar-total\",\n    style: {\n      height: heightTotalBar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-bar-current\",\n    style: {\n      width: widthBar + \"%\",\n      marginLeft: marginLeft + \"%\",\n      backgroundColor: primaryColor,\n      height: heightCurrentBar,\n      bottom: heightCurrentBar - heightTotalBar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}; // Constants for the widths\n\nexport const LaptopWidth = [{\n  \"minWidth\": 1025,\n  \"maxWidth\": 1280\n}];\nexport const TableWidth = [{\n  \"minWidth\": 768,\n  \"maxWidth\": 1024\n}];\nexport const MobileWidth = [{\n  \"minWidth\": 320,\n  \"maxWidth\": 767\n}];\nexport const getDevice = width => {\n  if (width > LaptopWidth[0]['minWidth']) {\n    return 1;\n  } else if (width >= TableWidth[0]['minWidth'] && width <= TableWidth[0]['maxWidth']) {\n    return 2;\n  } else if (width <= MobileWidth[0]['maxWidth']) {\n    return 3;\n  }\n\n  return 1;\n};","map":{"version":3,"sources":["C:\\Users\\andri\\IdeaProjects\\cecistyle\\src\\js\\FormUtil.js"],"names":["React","SliderBar","currentPage","totalPages","primaryColor","heightCurrentBar","heightTotalBar","widthBar","Math","round","marginLeft","height","width","backgroundColor","bottom","LaptopWidth","TableWidth","MobileWidth","getDevice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAGA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaC,EAAAA,UAAb;AAAwBC,EAAAA,YAAxB;AAAqCC,EAAAA,gBAArC;AAAsDC,EAAAA;AAAtD,CAAD,KAA2E;AAElG,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAa,IAAEN,UAAH,GAAe,GAAhB,GAAqB,GAAhC,IAAqC,GAAtD;AACA,QAAMO,UAAU,GAAGR,WAAW,GAACK,QAA/B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AAACI,MAAAA,MAAM,EAACL;AAAR,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AACK,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAACL,QAAQ,GAAC,GAAhB;AAAoBG,MAAAA,UAAU,EAACA,UAAU,GAAC,GAA1C;AAA8CG,MAAAA,eAAe,EAACT,YAA9D;AAA2EO,MAAAA,MAAM,EAACN,gBAAlF;AAAoGS,MAAAA,MAAM,EAAET,gBAAgB,GAACC;AAA7H,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CAXM,C,CAaP;;AACA,OAAO,MAAMS,WAAW,GAAI,CAAE;AAAC,cAAa,IAAd;AAAoB,cAAY;AAAhC,CAAF,CAArB;AACP,OAAO,MAAMC,UAAU,GAAE,CAAE;AAAC,cAAa,GAAd;AAAmB,cAAY;AAA/B,CAAF,CAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,CAAE;AAAC,cAAa,GAAd;AAAmB,cAAY;AAA/B,CAAF,CAApB;AAEP,OAAO,MAAMC,SAAS,GAAKN,KAAF,IAAY;AACnC,MAAIA,KAAK,GAAGG,WAAW,CAAC,CAAD,CAAX,CAAe,UAAf,CAAZ,EAAuC;AACrC,WAAO,CAAP;AACD,GAFD,MAEO,IAAKH,KAAK,IAAII,UAAU,CAAC,CAAD,CAAV,CAAc,UAAd,CAAT,IAAsCJ,KAAK,IAAII,UAAU,CAAC,CAAD,CAAV,CAAc,UAAd,CAApD,EAAgF;AACrF,WAAO,CAAP;AACD,GAFM,MAEA,IAAKJ,KAAK,IAAIK,WAAW,CAAC,CAAD,CAAX,CAAe,UAAf,CAAd,EAA2C;AAChD,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD,CATM","sourcesContent":["import React from 'react'\r\n//import 'jspdf-autotable';\r\n\r\n\r\nexport const SliderBar = ({currentPage,totalPages,primaryColor,heightCurrentBar,heightTotalBar}) => {\r\n\r\n  const widthBar = Math.round(((1/totalPages)*100)*100)/100;\r\n  const marginLeft = currentPage*widthBar;\r\n\r\n  return(\r\n    <div className=\"slider-bar-total\" style={{height:heightTotalBar}}>\r\n      <div className=\"slider-bar-current\"\r\n           style={{width:widthBar+\"%\",marginLeft:marginLeft+\"%\",backgroundColor:primaryColor,height:heightCurrentBar, bottom:(heightCurrentBar-heightTotalBar)}}/>\r\n    </div>\r\n  )\r\n};\r\n\r\n// Constants for the widths\r\nexport const LaptopWidth  = [ {\"minWidth\" : 1025, \"maxWidth\" :1280}];\r\nexport const TableWidth =[ {\"minWidth\" : 768, \"maxWidth\" :1024}];\r\nexport const MobileWidth = [ {\"minWidth\" : 320, \"maxWidth\" :767}];\r\n\r\nexport const getDevice = ( width ) =>{\r\n  if( width > LaptopWidth[0]['minWidth']){\r\n    return 1;\r\n  } else if ( width >= TableWidth[0]['minWidth'] && width <= TableWidth[0]['maxWidth'] ) {\r\n    return 2;\r\n  } else if ( width <= MobileWidth[0]['maxWidth'] ) {\r\n    return 3;\r\n  }\r\n  return 1;\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}